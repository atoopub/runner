name: app-build-action

on:
  push:
    branches: [main]
    paths:
      - 'app_version.json'
jobs:
  build-android:
    runs-on: ubuntu-22.04
    permissions: write-all
    steps:
      #签出代码 
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Clone PRIVATE repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.1
        with:
          owner: 'atoopub'
          repository: '_'
          access-token: ${{ secrets.TOKEN }}

      #APK签名设置
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: xs.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake libgtk-3-dev ninja-build libgtk-3-dev liblzma-dev libmpv-dev mpv
      #设置JAVA环境
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      
      #设置Flutter
      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml

      #更新Flutter的packages
      - name: Restore packages
        run: |
          flutter pub get

      #打包APK
      - name: Build APK
        run: |
          flutter build apk --release --split-per-abi
      
      - name: Build APK
        run: |
          flutter build apk --release
      
      #上传APK至Artifacts
      - name: Upload APK to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk

      #读取版本信息
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: app_version.json
      - name: Echo version
        run: echo "${{ fromJson(steps.version.outputs.content).version }}"
      - name: Echo version content
        run: echo "${{ fromJson(steps.version.outputs.content).version_desc }}"

      #上传至Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          repository: atoopub/aaa
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          tag_name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/flutter-apk/app-x86_64-release.apk
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
      #完成
      - run: echo "🍏 This job's status is ${{ job.status }}."

  # 打包MacOS iOS
  build-mac-ios:
    runs-on: macos-latest
    permissions: write-all
    steps:
      #签出代码 
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Clone PRIVATE repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.1
        with:
          owner: 'atoopub'
          repository: '_'
          access-token: ${{ secrets.TOKEN }}

      #设置Flutter
      - name: Flutter action
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true

      # 打开MAC Desktop支持
      - name: Enable Flutter Desktop
        run: flutter config --enable-macos-desktop

      #更新Flutter的packages
      - name: Restore packages
        run: |
          flutter pub get

      # 安装appdmg npm install -g appdmg
      - name: Install appdmg
        run: npm install -g appdmg

      # 设置flutter_distributor环境
      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      #打包iOS
      - name: Build IPA
        run: |
          flutter build ios --release --no-codesign
      
      #创建未签名ipa
      - name: Create IPA
        run: |
          mkdir build/ios/iphoneos/Payload
          cp -R build/ios/iphoneos/Runner.app build/ios/iphoneos/Payload/Runner.app
          cd build/ios/iphoneos/
          zip -q -r ios_no_sign.ipa Payload
          cd ../../..
      
      #上传IPA至Artifacts
      - name: Upload IPA to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ios
          path: |
            build/ios/iphoneos/ios_no_sign.ipa
      
      # 打包MAC
      - name: Build MacOS
        run: |
          flutter_distributor package --platform macos --targets dmg,zip --skip-clean

      # 上传MAC至Artifacts
      - name: Upload MacOS to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: |
            dist/*/*.dmg
            dist/*/*.zip

      #读取版本信息
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: app_version.json
      - name: Echo version
        run: echo "${{ fromJson(steps.version.outputs.content).version }}"
      - name: Echo version content
        run: echo "${{ fromJson(steps.version.outputs.content).version_desc }}"

      #上传至Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          repository: atoopub/aaa
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          tag_name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            build/ios/iphoneos/ios_no_sign.ipa
            dist/*/*.dmg
            dist/*/*.zip
      #完成
      - run: echo "🍏 This job's status is ${{ job.status }}."

  # 打包Linux
  build-linux:
    runs-on: ubuntu-22.04
    permissions: write-all
    steps:
      # 签出代码
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Clone PRIVATE repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.1
        with:
          owner: 'atoopub'
          repository: '_'
          access-token: ${{ secrets.TOKEN }}

      # 设置Flutter环境
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache: true
      # 安装依赖
      - name: Update apt-get
        run: sudo apt-get update
      - name: Install Dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libmpv-dev mpv
      # 打开Linux Desktop支持
      - name: Enable Flutter Desktop
        run: flutter config --enable-linux-desktop
      # 更新Flutter的packages
      - name: Restore Packages
        run: |
          flutter pub get
      # 设置flutter_distributor环境
      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor
      # build Linux ZIP\DMG
      - name: Build Linux
        run: |
          flutter_distributor package --platform linux --targets deb,zip --skip-clean
      # 上传Linux包至Artifacts
      - name: Upload Linux APP to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            dist/*/*.deb
            dist/*/*.zip

      # 读取版本信息
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: app_version.json
      - name: Echo version
        run: echo "${{ fromJson(steps.version.outputs.content).version }}"
      - name: Echo version content
        run: echo "${{ fromJson(steps.version.outputs.content).version_desc }}"

      #上传至Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          repository: atoopub/aaa
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          tag_name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            dist/*/*.deb
            dist/*/*.zip
        #完成
      - run: echo "🍏 Linux job's status is ${{ job.status }}."

  # 打包Windows
  build-windows:
    runs-on: windows-latest
    permissions: write-all
    steps:
      # 签出代码
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Clone PRIVATE repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.1
        with:
          owner: 'atoopub'
          repository: '_'
          access-token: ${{ secrets.TOKEN }}

      - run: choco install yq
      - name: Enable Git longpaths
        run: git config --system core.longpaths true
      # 设置Flutter环境
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: pubspec.yaml
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Enable Flutter Desktop
        run: flutter config --enable-windows-desktop
      - name: Restore Packages
        run: |
          cd _
          flutter pub get
      # build Windows
      - name: Build Windows
        run: |
          cd _
          flutter build windows
      - run: Compress-Archive build/windows/x64/runner/Release/* xs_windows.zip

      - name: Compile .ISS to .EXE Installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: _/windows/innosetup.iss

      # 上传Windows至Artifacts
      - name: Upload Windows APP to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            _/xs_windows.zip
            _/xs_windows_installer.exe

      # 读取版本信息
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: app_version.json
      - name: Echo version
        run: echo "${{ fromJson(steps.version.outputs.content).version }}"
      - name: Echo version content
        run: echo "${{ fromJson(steps.version.outputs.content).version_desc }}"

      #上传至Release
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          repository: atoopub/aaa
          name: "${{ fromJson(steps.version.outputs.content).version }}"
          tag_name: "${{ fromJson(steps.version.outputs.content).version }}"
          body: "${{ fromJson(steps.version.outputs.content).version_desc }}"
          prerelease: ${{ fromJson(steps.version.outputs.content).prerelease }}
          token: ${{ secrets.TOKEN }}
          files: |
            _/xs_windows.zip
            _/xs_windows_installer.exe

      #完成
      - run: echo "🍏 Windows job's status is ${{ job.status }}."
